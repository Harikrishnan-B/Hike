<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .product-box {
            display: flex;
            border: 1px solid #ccc;
            margin-bottom: 20px;
            max-width: 900px;
            margin: 0 auto;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .product-image {
            margin-right: 20px;
        }

        .product-details {
            flex-grow: 1;
        }

        .product-actions {
            position: relative;
        }

        .product-image img {
            height: 100px;
            width: 100px;
            display: block;
            border-radius: 5px;
        }

        .btn {
            padding: 8px 16px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn:hover {
            background-color: #0056b3;
        }

        .invoice-download {
            text-align: right;
            margin-top: 10px; /* Adjust margin as needed */
        }

        .invoice-download a {
            text-decoration: none;
        }
    </style>
</head>
<body>

    <div class="container">
        <a href="/orderPage" style="position: absolute; top: 20px; left: 20px; text-decoration: none; color: #000; margin-left: 30px; margin-top: 20px;">
            ðŸ”™ Back
        </a>
        <h1 style="margin-left: 630px; margin-top: 50px; padding-bottom: 20px;">My Orders</h1>
        <% orders.forEach(order => { %>
            <% order.items.forEach(item => { %>
                <div class="product-box">
                    <div class="product-image">
                        <img src="<%= item.product.product_images[0] %>" alt="<%= item.product.name %>">
                    </div>
                    <div class="product-details">
                        <h5><%= item.product.name %></h5>
                        <p>Category: <%= item.product.category %></p>
                        <p>Price: â‚¹<%= order.TotalPrice %></p>
                        <p>Quantity: <%= item.quantity %></p>
                        <% if (order.shippingAddress) { %>
                            <p>Shipping Address: <%= order.shippingAddress.addresstype %> - <%= order.shippingAddress.housename %>, <%= order.shippingAddress.town %>, <%= order.shippingAddress.country %>, <%= order.shippingAddress.state %>, <%= order.shippingAddress.zipcode %></p>
                        <% } %>
                        <p>Payment Method: <%= order.paymentMethod %></p>
                        <p>Order Date: <%= order.createdAt.toLocaleString('en-US', { timeZone: 'UTC' }) %></p>
                        <p id="status-<%= item._id %>">Status: <%= item.status %></p>
                        <% if (item.status === 'cancelled') { %>
                        <% } else if (item.status === 'delivered') { %>
                            <div class="product-actions">
                                <button class="btn btn-primary" id="return-btn-<%= item._id %>" onclick="toggleDropdown('<%= item._id %>', '<%= order._id %>')">Return</button>
                            </div>
                        <% } else if (item.status === 'returned') { %>
                        <% } else { %>
                            <button type="button" id="cancel-btn-<%= item._id %>" class="btn btn-danger" onclick="cancelOrder('<%= order._id %>', '<%= item._id %>')">Cancel</button>
                        <% } %>
                    </div>
                    <div class="invoice-download">
                        <% if (item.status === 'delivered'&& item.status !== 'returned') { %>
                            <a href="/generateInvoice/<%= order._id %>">&#x2B07; Invoice</a>
                        <% } %>
                    </div>
                </div>
            <% }); %>
        <% }); %>
    </div>

<script>
    function cancelOrder(orderId, itemId) {
        Swal.fire({
            title: 'Confirm Cancel',
            text: 'Are you sure you want to cancel this order?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, cancel it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // If user confirms, proceed with the cancellation action
                fetch('/cancelOrder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId: orderId, itemId: itemId })
                })
                .then(response => {
                    if (response.ok) {
                        const statusElement = document.getElementById(`status-${itemId}`);
                        if (statusElement) {
                            statusElement.textContent = "Status: cancelled";
                        }
                        const cancelBtn = document.getElementById(`cancel-btn-${itemId}`);
                        if (cancelBtn) {
                            cancelBtn.parentNode.removeChild(cancelBtn);
                        }
                        return response.json();
                    }
                    throw new Error('Failed to cancel order');
                })
                .catch(error => {
                    console.error('Error cancelling order:', error);
                });
            }
        });
    }

    function toggleDropdown(itemId, orderId) {
        Swal.fire({
            title: 'Confirm Return',
            text: 'Are you sure you want to return this item?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, return it!',
            html:
                '<select id="returnReason" class="swal2-select">' +
                '<option value="default">Default Product</option>' +
                '<option value="Quality Not as Expected">Quality Not as Expected</option>' +
                '<option value="tear_product">Tear Product</option>' +
                '<option value="Wrong Item Delivered">Wrong Item Delivered</option>' +
                '<option value="Product Arrived Too Late">Product Arrived Too Late</option>' +
                '</select>',
            preConfirm: () => {
                const reason = Swal.getPopup().querySelector('#returnReason').value;
                return { reason: reason };
            }
        }).then((result) => {
            if (result.isConfirmed) {
                const reason = result.value.reason;
                returnOrder(orderId, itemId, reason);
            }
        });
    }

    function returnOrder(orderId, itemId, reason) {
        // URL of the endpoint
        const url = '/return';

        // Data to be sent in the request body
        const data = {
            orderId: orderId,
            itemId: itemId,
            returnReason: reason
        };

        // Fetch POST request
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Failed to return item');
            }
            return response.json();
        })
        .then(data => {
            // Handle success response here
            console.log('Item returned successfully:', data);
            const returnBtn = document.getElementById(`return-btn-${itemId}`);
            if (returnBtn) {
                returnBtn.style.display = 'none';
            }
            const statusElement = document.getElementById(`status-${itemId}`);
            if (statusElement) {
                statusElement.textContent = "Status: returned";
            }
        })
        .catch(error => {
            // Handle error here
            console.error('Error returning item:', error);
        });
    }
</script>

</body>
</html>
